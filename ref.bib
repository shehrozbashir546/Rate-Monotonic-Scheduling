% This file was created with Citavi 6.7.0.0
%this is the purple book
@book{buttazzo2011hard,
  title={Hard Real-Time Computing Systems: Predictable Scheduling Algorithms and Applications},
  author={Buttazzo, G.C.},
  isbn={9781461406761},
  lccn={2011937234},
  series={Real-Time Systems Series},
  url={https://books.google.de/books?id=h6q-e4Q\_rzgC},
  year={2011},
  publisher={Springer US}
}
%red book
@book{rtembedded,
  title={Real-Time Embedded Systems: Design Principles and Engineering Practices},
  author={Fan, X.},
  isbn={9780128017180},
  url={https://books.google.de/books?id=KuycBAAAQBAJ},
  year={2015},
  publisher={Elsevier Science}
}


% original paper
@article{ogpaper,
author = {Liu, C. L. and Layland, James W.},
title = {Scheduling Algorithms for Multiprogramming in a Hard-Real-Time Environment},
year = {1973},
issue_date = {Jan. 1973},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {20},
number = {1},
issn = {0004-5411},
url = {https://doi.org/10.1145/321738.321743}, Add to Citavi project by DOI
doi = {10.1145/321738.321743},
abstract = {The problem of multiprogram scheduling on a single processor is studied from the viewpoint of the characteristics peculiar to the program functions that need guaranteed service. It is shown that an optimum fixed priority scheduler possesses an upper bound to processor utilization which may be as low as 70 percent for large task sets. It is also shown that full processor utilization can be achieved by dynamically assigning priorities on the basis of their current deadlines. A combination of these two scheduling techniques is also discussed.},
journal = {J. ACM},
month = {jan},
pages = {46â€“61},
numpages = {16}
}
% delayed rma initial
@INPROCEEDINGS{delayedRMA,
  author={Naghibzadeh, M.},
  booktitle={Proceedings of the Seventh IEEE International Workshop on Object-Oriented Real-Time Dependable Systems. (WORDS 2002)}, 
  title={A modified version of rate-monotonic scheduling algorithm and its' efficiency assessment}, 
  year={2002},
  volume={},
  number={},
  pages={289-294},
  abstract={Scheduling algorithms play a significant role in the design of real-time computing systems. Rate-monotonic, deadline-monotonic, relative urgency and least laxity algorithms are the most commonly used algorithms. It is already proved that rate-monotonic (RM) is an optimal fixed priority algorithm and many practical safety verification algorithms are developed. Here, an improvement to lower bound processor load factor for some special cases is presented We then established a modified version of the rate-monotonic algorithm named delayed rate-monotonic (DRM) algorithm that uses two ready states, instead of one. For two special cases we showed full processor utilization is possible. Two algorithms, namely DRM and RM, are then compared and it is shown that there are many systems that are safe with DRM algorithm but are unsafe with RM algorithm. Also, for a set of randomly generated systems number of task preemptions for the two algorithms is compared .It is concluded that DRM is very promising and it has the potential to be considered for future research.},
  keywords={},
  doi={10.1109/WORDS.2002.1000064},
  ISSN={1530-1443},
  month={Jan},}
%delayed rma final
@INPROCEEDINGS{drma2,
  author={Senobary, Saeed and Naghibzadeh, Mahmoud},
  booktitle={2014 6th International Conference on Computer Science and Information Technology (CSIT)}, 
  title={Delayed rate monotonic with semi-partitioned technique adapted to multiprocessors}, 
  year={2014},
  volume={},
  number={},
  pages={82-89},
  doi={10.1109/CSIT.2014.6805983}}
%Python Documentation
@misc{deepcopy,
 title = {Copy, Shallow and Deep Copy Operations - Python 3.10.4 documentation},
 url = {https://docs.python.org/3/library/copy.html},
 urldate = {29-May-22}
}

% Dictionary Documentation

@misc{pydictionary,
 abstract = {W3Schools offers free online tutorials, references and exercises in all the major languages of the web. Covering popular subjects like HTML, CSS, JavaScript, Python, SQL, Java, and many, many more.},
 title = {Python Dictionaries},
 url = {https://www.w3schools.com/python/python_dictionaries.asp},
 urldate = {29-May-22}
}

%hard real time system
@book{hardrealtime,
  title={Advances in real-time systems},
  author={Krithi Ramamritham and John A. Stankovic},
  isbn={9780818637926},
  url={https://books.google.de/books?id=KuycBAAAQBAJ},
  year={1995},
  publisher={Los Alamitos, Calif IEEE Computer Society Press}
}

% github references
% This file was created with Citavi 6.7.0.0

@misc{GitHub1,
 abstract = {RMS implementation in Java. Without considering resource sharing and precedence. - prasannjeet/Rate-Monotonic-Scheduling-Algorithm: RMS implementation in Java. Without considering resource sharing and precedence.},
 author = {prasannjeet},
 title = {Rate-Monotonic-Scheduling-Algorithm: RMS implementation in Java. Without considering resource sharing and precedence},
 url = {https://github.com/prasannjeet/Rate-Monotonic-Scheduling-Algorithm},

}


@misc{GitHub2,
 abstract = {Simulation of the behaviour of a Preemptive Fixed Priority Rate Monotonic Scheduler in C++ - sampreets3/scheduler-RM: Simulation of the behaviour of a Preemptive Fixed Priority Rate Monotonic Scheduler in C++},
 author = {sampreets3},
 title = {Scheduler-RM: Simulation of the behaviour of a Preemptive Fixed Priority Rate Monotonic Scheduler in C++},
 url = {https://github.com/sampreets3/scheduler-RM},

}
% Worst case bound analysis
% This file was created with Citavi 6.7.0.0

@INPROCEEDINGS{wcbanalysis,
  author={Lehoczky, J. and Sha, L. and Ding, Y.},
  booktitle={[1989] Proceedings. Real-Time Systems Symposium}, 
  title={The rate monotonic scheduling algorithm: exact characterization and average case behavior}, 
  year={1989},
  volume={},
  number={},
  pages={166-171},
  doi={10.1109/REAL.1989.63567}}

% latest paper i found
@article{LI20,
title = {Comprehensive study of schedulability tests and optimal design for rate-monotonic scheduling},
journal = {Computer Communications},
volume = {173},
pages = {107-119},
year = {2021},
issn = {0140-3664},
doi = {https://doi.org/10.1016/j.comcom.2021.03.013},
url = {https://www.sciencedirect.com/science/article/pii/S0140366421001092},
author = {Yang Li and Tianying Liu and Jianming Zhu and Xiuli Wang and Meijiao Duan and Youwei Wang},
keywords = {Real-time systems, Rate-monotonic scheduling, Schedulability tests, Optimal design},
abstract = {Schedulability analysis of the rate-monotonic (RM) scheduling algorithm is an important research field in real-time systems. New dimensions in RM have been explored, ranging from faster schedulability tests to the optimal design of real-time systems. Recently, researchers have extended the schedulability problem to a more generalized case: the rate-monotonic optimal-design problem (RM-ODP), wherein the execution time is limited to an interval rather than a sole point. The RM-ODP processes task-execution-time adjustment such that (i) the system is RM schedulable and (ii) certain system performances (e.g., processor utilization) are optimized. In this paper, we review RM scheduling and summarize three aspects of the related research: (1) evaluate existing relevant feasibility tests by categorizing them based on inexact or exact conditions; (2) comprehensively review RM-ODP, summarize associated advantages and disadvantages, and provide some recommendations on schedulability tests to achieve the optimal system design under RM-scheduling policies; and (3) propose a hybrid search method based on linear programming with respect to both depth-first search and breadth-first search using the dynamic pruning strategy.}
}
%burchard bound
@ARTICLE{BBound,  author={Burchard, A. and Liebeherr, J. and Yingfeng Oh and Son, S.H.},  journal={IEEE Transactions on Computers},   title={New strategies for assigning real-time tasks to multiprocessor systems},   year={1995},  volume={44},  number={12},  pages={1429-1442},  doi={10.1109/12.477248}}

%hyperbolic bound
@ARTICLE{hyperBound,  author={Bini, E. and Buttazzo, G.C. and Buttazzo, G.M.},  journal={IEEE Transactions on Computers},   title={Rate monotonic analysis: the hyperbolic bound},   year={2003},  volume={52},  number={7},  pages={933-942},  doi={10.1109/TC.2003.1214341}}

%openmp implementation
@INPROCEEDINGS{omp,  author={Dashora, Rajnish and Bajaj, Harsh P. and Dube, Akshat and Narayanamoorthy M},  booktitle={2014 International Conference on Advances in Electrical Engineering (ICAEE)},   title={ParaRMS algorithm: A parallel implementation of rate monotonic scheduling algorithm using OpenMP},   year={2014},  volume={},  number={},  pages={1-6},  doi={10.1109/ICAEE.2014.6838557}}